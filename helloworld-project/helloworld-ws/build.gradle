apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    implementation 'com.sun.xml.ws:jaxws-ri:2.3.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Arquillian BOM (Bill Of Materials)
    testImplementation 'org.jboss.arquillian:arquillian-bom:1.1.1.Final'
    testImplementation 'org.jboss.arquillian.junit:arquillian-junit-container:1.1.1.Final'
    testImplementation 'org.wildfly:wildfly-arquillian-container-embedded:8.1.0.Final'
    testImplementation 'org.wildfly.arquillian:wildfly-arquillian-container-managed:2.2.0.Final'
    testImplementation 'org.wildfly.arquillian:wildfly-arquillian-container-remote:2.2.0.Final'


    // ShrinkWrap Resolver
    testImplementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-maven:2.2.4'

    // ShrinkWrap
    testImplementation 'org.jboss.shrinkwrap:shrinkwrap-api:1.2.3'
    testImplementation 'org.jboss.shrinkwrap:shrinkwrap-impl-base:1.2.3'
    testImplementation 'org.jboss.shrinkwrap:shrinkwrap-spi:1.2.3'
}


task buildCustom(type: Jar) {
    from sourceSets.main.output
    archiveBaseName = 'helloworld-tvucicevic-gradle-build'
    archiveVersion = '1.0.0'
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': archiveVersion
    }
}

task log(type:Exec) {
    workingDir '.'
    commandLine 'bash', '-c', 'gradle buildCustom --stacktrace > output.log'
}


task testCustom(type: Test) {
    dependsOn buildCustom
    systemProperty 'java.util.logging.manager', 'org.jboss.logmanager.LogManager'
    exclude '**/ClientArqIT.class'
    // doLast {
    //     def testLog = logging.captureStandardOutput(LogLevel.INFO).toString()
    //     file('output.log').append("\n" + testLog)
    // }
    // logging.captureStandardOutput LogLevel.INFO
}

task hello {
    dependsOn testCustom
    doLast {
        println 'Hello, World!'
        // def helloLog = logging.captureStandardOutput(LogLevel.INFO).toString()
        // file('output.log').append("\n" + helloLog)
    }
    // logging.captureStandardOutput LogLevel.INFO
}